name: Continuous Integration

on:
  push:
    branches: [master]

env:
  IMAGE: ghcr.io/${{ github.repository }}/web-app

jobs:

  build:
    name: Build Docker Image
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout master
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and Push to GhCR
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.prod
          push: true
          tags: ${{ env.IMAGE }}:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  test:
    name: Test Docker Image
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - name: Checkout master
        uses: actions/checkout@v2

      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Pull images
        run: |
          docker pull ${{ env.IMAGE }}:latest || true

      - name: Run container
        run: |
          docker run \
            -d \
            --name prophet \
            -e PORT=8765 \
            -e ENVIRONMENT=dev \
            -e DATABASE_TEST_URL=sqlite:///sqlite.db \
            -e DATABASE_URL=sqlite:///sqlite_prod.db \
            -p 5003:8765 \
            ${{ env.IMAGE }}:latest

      - name: Install requirements
        run: |
          docker exec prophet pip install -r ./requirements-dev.in || true
      - name: Print logs
        run: |
          docker logs prophet

      - name: Pytest
        run: docker exec prophet pytest . -p no:warnings -vv

      - name: Flake8
        run: docker exec prophet python -m flake8 .

      - name: Black
        run: docker exec prophet python -m black . --check

      - name: isort
        run: docker exec prophet python -m isort . --check-only

#       - name: Submit coverage report
#         run: |
#           codecov --token=${{ secrets.CODECOV_PAT }}
